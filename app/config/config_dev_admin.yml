imports:
    - { resource: config.yml }

limenius_react:
    # Other options are "server_side" and "client_side"
    default_rendering: "both"

    serverside_rendering:
        # In case of error in server-side rendering, throw exception
        fail_loud: false

        # Replay every console.log message produced during server-side rendering
        # in the JavaScript console
        # Note that if enabled it will throw a (harmless) React warning
        trace: false

        # Mode can be `"phpexecjs"` (to execute Js from PHP using PhpExecJs),
        # or `"external"` (to rely on an external node.js server)
        # Default is `"phpexecjs"`
        mode: "phpexecjs"

        # Location of the server bundle, that contains React and React on Rails.
        # null will default to `%kernel.root_dir%/Resources/webpack/server-bundle.js`
        # Only used with mode `phpexecjs`
        server_bundle_path: '%kernel.root_dir%/Resources/webpack/admin.server-bundle.js'

        # Only used with mode `external`
        # Location of the socket to communicate with a dummy node.js server.
        # Socket type must be acceptable by php function stream_socket_client. Example unix://node.sock, tcp://127.0.0.1:5000
        # More info: http://php.net/manual/en/function.stream-socket-client.php
        # Example of node server:
        # https://github.com/Limenius/symfony-react-sandbox/blob/master/app/Resources/node-server/server.js
        # null will default to `unix://%kernel.root_dir%/Resources/node-server/node.sock`
        server_socket_path: null

framework:
    router:
        resource: '%kernel.project_dir%/app/config/routing_dev.yml'
        strict_requirements: true
    profiler: { only_exceptions: false }

web_profiler:
    toolbar: true
    intercept_redirects: false

monolog:
    handlers:
        main:
            type: stream
            path: '%kernel.logs_dir%/%kernel.environment%.log'
            level: debug
            channels: ['!event']
        console:
            type: console
            process_psr_3_messages: false
            channels: ['!event', '!doctrine', '!console']
        # To follow logs in real time, execute the following command:
        # `bin/console server:log -vv`
        server_log:
            type: server_log
            process_psr_3_messages: false
            host: 127.0.0.1:9911
        # uncomment to get logging in your browser
        # you may have to allow bigger header sizes in your Web server configuration
        #firephp:
        #    type: firephp
        #    level: info
        #chromephp:
        #    type: chromephp
        #    level: info

#swiftmailer:
#    delivery_addresses: ['me@example.com']
